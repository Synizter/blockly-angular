{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/customblock/temi.skill.block.ts","./src/app/material/material.module.ts","./src/app/blocklyworkspace/blocklyworkspace.component.ts","./src/app/blocklyworkspace/blocklyworkspace.component.html","./src/app/app-routing.module.ts","./src/app/editor/editor.component.ts","./src/app/editor/editor.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'siit-blockly';\n  content:JSON;\n  displayWorkspace: boolean = false;\n  \n  public receiveCodeEvent(code) {\n    try{\n      this.content = JSON.parse(code);\n    } catch(e) {\n      alert('Invalid json format!')\n      this.displayWorkspace = false;\n    }\n  }\n\n  public DisplayBlocklyWorkspace(isDisplay) {\n    this.displayWorkspace = isDisplay;\n  }\n}\n","<!-- <h1>SIIT Blockly Editor System</h1>\n<app-blocklyworkspace></app-blocklyworkspace>\n<app-editor></app-editor> -->\n\n<div>\n    <!-- header -->\n    <nav class=\"navbar navbar-light bg-light \">\n        <div class=\"container text-center p-2 \">\n            <span class=\"mx-auto text-bold\">Blockly CMS Test</span>\n        </div>\n    </nav>\n</div>\n\n<app-editor \n (codeEmittor)=\"receiveCodeEvent($event)\"\n (displayBlocklyWorkspace)=\"DisplayBlocklyWorkspace($event)\">\n</app-editor>\n\n<app-blocklyworkspace *ngIf=\"displayWorkspace\" [jsonContent]=\"content\"></app-blocklyworkspace>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgxBlocklyModule } from 'ngx-blockly';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MaterialModule } from './material/material.module';\nimport { BlocklyworkspaceComponent } from './blocklyworkspace/blocklyworkspace.component';\nimport { EditorComponent } from './editor/editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BlocklyworkspaceComponent,\n    EditorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgxBlocklyModule,\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { BlockMutator, CustomBlock } from \"ngx-blockly\";\n\ndeclare var Blockly : any;\n\nexport class SkillCallBlock extends CustomBlock {\n    constructor(type: string, block: any, blockMutator: BlockMutator, ...args: any[]) {\n        super(type, block, blockMutator, ...args);\n        this.class = SkillCallBlock;\n    }\n    \n    defineBlock() {\n        this.block.appendDummyInput()\n        .appendField(\"Call\")\n        .appendField(new Blockly.FieldDropdown([[\"Man\",\"fe1090ed941db12ed1d350730031ea5b\"], [\"Pear\",\"4990c18cea5e6604cc1adc384fe224e8\"], [\"AjVirach\",\"67696f1ff709a3b0804ae43641ed8d85\"]]), \"contact\");\n        this.block.setPreviousStatement(true, null);\n        this.block.setNextStatement(true, null);\n        this.block.setColour(230);\n        this.block.setTooltip(\"\");\n        this.block.setHelpUrl(\"Select person to call from drop down list\");\n    }\n\n    toXML() {\n        return '<block type=\"temi_skill_call\"></block>';\n    }\n\n    toJavaScriptCode(block: CustomBlock): string | any[] {\n        var contact = this.block.getFieldValue('contact');\n        // var code = `actionlist.append('{\"action\":\"CALL\", \"content\":\"${dropdown_contact}\"}')\\n`\n        var code = `robot.call(\"${contact}\")\\n`\n        return code;\n    }\n\n    onChange(changeEvent: any) {\n        //console.log(changeEvent);\n    }\n}\n\nexport class SkillGoToBlock extends CustomBlock {\n    constructor(type: string, block: any, blockMutator: BlockMutator, ...args: any[]) {\n        super(type, block, blockMutator, ...args);\n        this.class = SkillGoToBlock;\n    }\n    \n    defineBlock() {\n        this.block.appendDummyInput()\n            .appendField(\"Go to\")\n            .appendField(new Blockly.FieldTextInput(\"kitchen\"), \"location\");\n        this.block.setPreviousStatement(true, null);\n        this.block.setNextStatement(true, null);\n        this.block.setColour(230);\n        this.block.setTooltip(\"Command temi to go to a pre-defined location\");\n        this.block.setHelpUrl(\"\");\n    }\n\n    toXML() {\n        return '<block type=\"temi_skill_goto\"></block>';\n    }\n\n    toJavaScriptCode(block: CustomBlock): string | any[] {\n        var location = this.block.getFieldValue('location');\n        var code = `robot.goto(\"${location}\")\\n`\n        return code;\n    }\n\n    onChange(changeEvent: any) {\n        //console.log(changeEvent);\n    }\n}\n\nexport class SkillSpeakBlock extends CustomBlock {\n    private param : any[];\n    constructor(type: string, block: any, blockMutator: BlockMutator, ...args: any[]) {\n        super(type, block, blockMutator, ...args);\n        this.class = SkillSpeakBlock;\n    }\n    \n    defineBlock() {\n        this.block.appendDummyInput()\n            .appendField(\"Say\")\n            .appendField(new Blockly.FieldTextInput(\"hello world\"), \"utterance\")\n            .appendField(\"in\")\n            .appendField(new Blockly.FieldDropdown([[\"English\",\"en\"],[\"Thai\",\"th\"], [\"Japanese\",\"JP\"]]), \"language_options\");\n        this.block.setPreviousStatement(true, null);\n        this.block.setNextStatement(true, null);\n        this.block.setColour(315);\n        this.block.setTooltip(\"Type what you want temi to say, select languge either English, Japanese or Thai\");\n        this.block.setHelpUrl(\"\");\n    }\n\n    toXML() {\n        return '<block type=\"temi_skill_speak\"></block>';\n    }\n\n    toJavaScriptCode(block: CustomBlock): string | any[] {\n        var utterance = this.block.getFieldValue('utterance');\n        var language_option = this.block.getFieldValue('language_options');\n        var code = `robot.speak(\"${utterance}\", \"${language_option}\")\\n`\n        return code;\n\n    }\n\n    onChange(changeEvent: any) {\n        //console.log(changeEvent);\n    }\n}","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { MatButtonModule } from '@angular/material/button'\n\nconst MaterialComponents = [\n    MatButtonModule,\n]\n\n@NgModule({\n    imports: [MaterialComponents],\n    exports: [MaterialComponents]\n})\nexport class MaterialModule{\n    constructor() {}\n}","import { getLocaleFirstDayOfWeek } from '@angular/common';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { variable } from '@angular/compiler/src/output/output_ast';\nimport { stringify } from '@angular/compiler/src/util';\nimport { AfterViewInit, Component, OnInit, ViewChild, Input, AfterViewChecked } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { \n  NgxBlocklyComponent,\n  CustomBlock, \n  NgxBlocklyConfig, \n  NgxBlocklyGeneratorConfig, \n  NgxBlocklyToolbox } from 'ngx-blockly';\nimport { \n  NgxToolboxBuilderService,    \n  LOGIC_CATEGORY,\n  LOOP_CATEGORY,\n  MATH_CATEGORY,\n  TEXT_CATEGORY,\n  LISTS_CATEGORY,\n  VARIABLES_CATEGORY,\n  Category } from 'ngx-blockly';\n\n//CustomBlock import\nimport {\n  SkillCallBlock, \n  SkillGoToBlock, \n  SkillSpeakBlock } from '../customblock/temi.skill.block'\n\n\ndeclare var Blockly: any;\n\n\n@Component({\n  selector: 'app-blocklyworkspace',\n  templateUrl: './blocklyworkspace.component.html',\n  styleUrls: ['./blocklyworkspace.component.css']\n})\nexport class BlocklyworkspaceComponent implements AfterViewInit {\n\n  @ViewChild(NgxBlocklyComponent) blocklyComponent: NgxBlocklyComponent; //blockly workspace\n  @Input() jsonContent: JSON;\n  \n  public customBlocks: CustomBlock[] = [\n    //note that this string shoud be resemble block name in XML\n    new SkillCallBlock('temi_skill_call', null, null),\n    new SkillGoToBlock('temi_skill_goto',null, null),\n    new SkillSpeakBlock('temi_skill_speak',null, null)\n  ];\n  private generatedCode:string;\n  public downloadJsonHref: SafeUrl;\n  public config: NgxBlocklyConfig = {\n    scrollbars: true,\n    trashcan: true,\n    plugins: {\n      toolbox: NgxBlocklyToolbox\n    }\n  }\n  public generatorConfig: NgxBlocklyGeneratorConfig = {\n    // dart: true,\n    javascript: true,\n    // lua: true,\n    // php: true,\n    // python: true,\n    xml: true\n  };\n\n  //Callback function\n  onCode(code: string) {\n    //console.log(code)\n    this.generatedCode = code;\n  }\n\n  getGeneratedCode() {\n    return this.generatedCode;\n  }\n  \n  constructor(ngxToolboxBuilder: NgxToolboxBuilderService, private sanitizer: DomSanitizer) {\n    ngxToolboxBuilder.nodes = [\n        LOGIC_CATEGORY,\n        LOOP_CATEGORY,\n        MATH_CATEGORY,\n        TEXT_CATEGORY,\n        LISTS_CATEGORY,\n        VARIABLES_CATEGORY,\n        new Category('Temi Skill', '#FF21FF',this.customBlocks, null)\n    ];\n    this.config.toolbox = ngxToolboxBuilder.build();\n    \n  }\n  ngAfterViewInit(): void {\n    //Initialize workspace with block + create variable on code\n    this.blocklyComponent.fromXml(this.jsonContent['xml-workspace']);\n    //Add predefined external varialbe\n    for (var i = 0; i < this.jsonContent['vars-ext'].length; ++i) {\n      this.blocklyComponent.workspace.createVariable(this.jsonContent['vars-ext'][i]);\n    }\n\n  }\n\n  private replaceAllOccuren(qstr:string, tstr:string, out:string) {\n      var re = new RegExp(qstr, 'gi');\n      return out.replace(re, tstr);\n  }\n\n  public generateWorkspace() {\n    let outputJson:JSON = this.jsonContent;\n    //1 pack xml workspace file\n    outputJson['xml-workspace'] = this.blocklyComponent.toXml()\n    \n    //2 pack variable to internal (vars-int : created on blockly) and external (vars-ext : create by external workspace)\n    let allWorkspaceVariable:any = this.blocklyComponent.workspace.getAllVariables();\n    //console.log(outputJson['vars-ext'].some(ele => ele === \"obj.name\"))\n    allWorkspaceVariable.forEach(element => {\n      (outputJson['vars-ext'].some(ele => ele === element.name) === -1 && outputJson['vars-int'].indexOf(element.name) === -1) ? (outputJson['vars-int'].push(element.name)): (null);\n    });\n    \n    //3 remove all variable declaration from generated code and add only internal variable declaration\n    let codeworkspace: string = this.generatedCode;\n    codeworkspace = codeworkspace.substring(codeworkspace.indexOf('\\n\\n') ,codeworkspace.length - 1)\n    let intVarDeclareStr = new String()\n    for(var i in outputJson['vars-int']) {\n      intVarDeclareStr += 'var ' + outputJson['vars-int'][i] + '\\n'\n    }\n    //console.log(intVarDeclareStr + codeworkspace)\n\n    //4. replace external variable object reference converted by blockly\n    allWorkspaceVariable.forEach(element => {\n      (outputJson['vars-ext'].indexOf(element.name) !== -1) ? (codeworkspace = this.replaceAllOccuren(element.name, element.name, codeworkspace)) : (null);\n    });\n    // console.log(intVarDeclareStr+codeworkspace);\n    outputJson['code-workspace'] = intVarDeclareStr + codeworkspace;\n\n    //RESET and export\n    intVarDeclareStr = undefined;\n    this.exportJsonFile();\n  }\n\n  public exportJsonFile() {\n    try {\n      let exportJson = JSON.stringify(this.jsonContent);\n      // console.log(exportJson);\n      let blob = new Blob([exportJson], {type:'text/json'});\n      let url = window.webkitURL.createObjectURL(blob);\n      let uri: SafeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n      this.downloadJsonHref = uri;\n    }catch(e){\n      alert(e);\n    }\n\n  }\n}\n\n//TEST {\"vars\":[\"var1\", \"var2\", \"var3\"]}\n","<!-- <p>blocklyworkspace works!</p> -->\n<div>\n    <button (click)=\"generateWorkspace()\">\n        Generate Workspace JSON\n    </button>\n    <a [href]=\"downloadJsonHref\" target=\"_blank\" class=\"btn btn-border\" download=\"workspace.json\">\n        Export JSON\n    </a>\n\n</div>\n\n<ngx-blockly \n[config]=\"config\" \n[customBlocks]=\"customBlocks\" \n[generatorConfig]=\"generatorConfig\" \n(javascriptCode)=\"onCode($event)\">\n</ngx-blockly>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { AfterViewInit, \n  Component, \n  ElementRef, \n  OnInit, \n  Output,\n  ViewChild,\n  EventEmitter } from '@angular/core';\n// ace editor\nimport * as ace from 'ace-builds';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/theme-github';\n\n\n\nconst EDITOR_THEME = 'ace/theme/github';\nconst EDITOR_MODE_LANG = 'ace/mode/json';\n\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('codeEditor') codeEditorElementRef : ElementRef;\n  @Output() codeEmittor:EventEmitter<string> = new EventEmitter<string>();\n  @Output() displayBlocklyWorkspace: EventEmitter<boolean> = new EventEmitter<boolean>();\n  private codeEditor: ace.Ace.Editor;\n\n  constructor() {\n  }\n   \n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n        //create element reference\n        const element = this.codeEditorElementRef.nativeElement;\n        //create option for editor\n        const editorOption : Partial<ace.Ace.EditorOptions> = {\n          highlightActiveLine: true,\n          minLines: 10,\n          maxLines: Infinity\n        }\n        this.codeEditor = ace.edit(element, editorOption);\n        this.codeEditor.setTheme(EDITOR_THEME);\n        this.codeEditor.getSession().setMode(EDITOR_MODE_LANG);\n        this.codeEditor.setShowFoldWidgets(true);\n  }\n\n  //Methods\n  public getCodeContent() {\n    if(this.codeEditor) {\n      const code = this.codeEditor.getValue();\n      return code;\n    }\n  }\n  \n  public clearCode() {\n    this.codeEditor.setValue('');\n    this.displayBlocklyWorkspace.emit(false);\n  }\n\n  public emitCode() {\n    this.displayBlocklyWorkspace.emit(true);\n    this.codeEmittor.emit(this.getCodeContent());\n  }\n\n  \n  \n\n}\n","  <!-- the code editor -->\n  <div class=\"row mb-4\">\n    <div class=\"col\">\n        <div class=\"code-editor\" #codeEditor></div>\n    </div>\n</div>\n\n<!-- TEST -->\n<div class=\"row mb-4 justify-content-center mx-4\">\n    <div class=\"col-4 col-lg-2 col-md-3 col-sm-4 w-75\">\n        <button type=\"button\" class=\"btn btn-dark btn-sm btn-block px-4 mx-2\" (click)=\"emitCode()\">\n            Run\n        </button>\n    </div>\n    <div class=\"col-4 col-lg-2 col-md-3 col-sm-4 w-75\">\n        <button type=\"button\" class=\"btn btn-primary btn-sm btn-block px-4 mx-2\" (click)=\"clearCode()\">\n            Reset\n        </button>\n    </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}